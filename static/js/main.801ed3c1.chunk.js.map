{"version":3,"sources":["github/third-party/git-connect/git-connect.js","lib/util.ts","lib/ledger.ts","github/connection.ts","components/spinner.tsx","github/hooks/use-user.ts","components/user.tsx","components/placeholder.tsx","components/forms/add-component.tsx","components/forms/util.ts","components/forms/add-setup.tsx","components/forms/generic/select-field.tsx","components/forms/add-version.tsx","components/question.tsx","components/alert.tsx","components/forms/add-test.tsx","components/styles.ts","components/elapsed-timer.tsx","components/tables/styles.tsx","components/tables/Pagination.tsx","components/tables/util.ts","components/tables/version.tsx","components/components-versions-map.tsx","components/no-render.tsx","components/tables/setup-tests.tsx","components/DebugData.tsx","components/app.tsx","github/hooks/use-ledger-data.ts","index.tsx"],"names":["XMLHttpRequest","connection","get_request","url","callback","xhr","open","onreadystatechange","this","readyState","status","JSON","parse","responseText","request","error","send","isConnected","getCookie","connect","window","location","href","config","disconnect","deleteCookies","reload","toggle","withCredentials","access_token","data","parseUrl","param","replace","results","RegExp","exec","setCookie","name","value","expires","d","Date","setTime","getTime","toGMTString","document","cookie","ca","split","i","length","c","trim","indexOf","substring","names","validateNonEmptyString","key","Error","getLedger","octokitAuthToken","ledgerRepo","a","ledger","Ledger","isCli","init","dayjs","extend","relativeTime","options","octokit","auth","ledgerFilePath","defaultData","components","versions","setups","tests","sha","Octokit","owner","response","deserialize","content","property","newData","message","serialize","postCheck","msg","console","rawData","str","decodeURIComponent","escape","atob","stringify","btoa","unescape","encodeURIComponent","checkData","id","isComponentExists","addTo","rawSetupData","Array","isArray","componentIds","findIndex","x","newHash","getComponentsHash","map","nonExistentComponents","filter","join","sort","componentId","tag","existingVersion","findVersion","date","format","warning","now","setupId","Object","keys","componentVersionMap","setup","getSetupById","validateSetupComponentsList","description","setupComponentIds","inputIds","every","includes","errorMsg","versionTag","b","semver","compare","find","getLatestVersion","result","reduce","forEach","push","warn","alert","process","arguments","scope","code","log","error_description","error_uri","dispatchEvent","CustomEvent","detail","gitConnect","client_id","REACT_APP_GITHUB_OAUTH_APP_CLIENT_ID","proxy","REACT_APP_GITHUB_OAUTH_APP_PROXY","REACT_APP_GITHUB_OAUTH_APP_SCOPES","String","connector","getLedgerInstance","Spinner","props","children","useState","setData","isLoading","setIsLoading","useEffect","getOctokitInstance","useUser","style","display","marginRight","className","html_url","margin","alt","src","avatar_url","login","position","alignItems","alignContent","height","width","flex","textAlign","color","textDecoration","cursor","onClick","e","preventDefault","authenticate","initialValues","onSubmit","values","setSubmitting","addComponent","isSubmitting","htmlFor","type","placeholder","component","disabled","stripPrefix","prefix","prefixRegex","startsWith","search","other","addSetup","paddingLeft","onChangeCb","field","form","onChange","option","setFieldValue","onBlur","VERSION_PLACEHOLDER","label","versionPlaceholder","setVersionPlaceholder","addVersion","SelectField","latestVersion","Styled","styled","div","Question","Alert","setComponents","entries","version","addTest","getSetupComponents","resetForm","Versions","vers","setVers","setError","getComponentsVersions","availableVersions","useVersions","useMemo","isLoadingVersionsData","C","L","ElapsedTimer","start","updateFrequency","elapsed","s","fromNow","elapsedStr","setElapsedStr","setInterval","useElapsed","T","Td","td","Th","th","Tr","tr","S","Wrapper","Pagination","tableInstance","gotoPage","canPreviousPage","previousPage","nextPage","canNextPage","pageCount","pageOptions","setPageSize","state","pageSize","pageIndex","defaultValue","page","target","Number","sortBy","prop","Table","table","ScrollXWrapper","VersionTable","React","release","columns","Header","Latest","accessor","Cell","row","useTable","initialState","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","tbody","span","ComponentsVersionsMap","wrapper","button","inner","isExpanded","NoRender","initialRender","isRendered","setIsRendered","title","SetupTestsTable","text","slice","rows","colSpan","DebugData","Stats","keyProp","RenderStat","RenderStuff","setLedgerInstance","fetch","useLedgerData","TopFixedWrapper","setupTests","getSetupTests","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.801ed3c1.chunk.js","sourcesContent":["/* eslint-disable */\r\n'use strict';\r\n/*\r\n * Javascript plugin for providing token-base Github OAuth via proxy with cookie storage.\r\n * https://github.com/krispo/git-connect\r\n */\r\nlet XMLHttpRequest;\r\nconst connection = {};\r\n\r\n/*\r\n * Connection definition, return connection\r\n * config = {\r\n *      client_id: <client_id>,  // github application\r\n *      proxy: <proxy>,          // git-proxy server\r\n *      owner: <admin_username>, // admin username\r\n *      reponame: <reponame>,    // application repository name\r\n *      scope: <list of scopes>, // repo,gist,user,...\r\n *      expires: <days>          // the number of days after cookies expire\r\n * }\r\n */\r\nexport default function connect(config) {\r\n  if (!arguments.length) return connection;\r\n\r\n  connection['config'] = { scope: 'public_repo', expires: 7 };\r\n  for (var key in config) {\r\n    connection.config[key] = config[key];\r\n  }\r\n\r\n  if (typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined') {\r\n    XMLHttpRequest = window.XMLHttpRequest;\r\n  }\r\n  var code = connection.parseUrl('code');\r\n  if (code) {\r\n    get_request(\r\n      connection.config['proxy'] + '/github_access_token?code=' + code + '&client_id=' + connection.config['client_id'],\r\n      function (error, data) {\r\n        if (error) {\r\n          console.log(error); // FIXME ? document.dispatchEvent(new CustomEvent('FailedToConnectToGithubEvent', { detail: error }))\r\n          return;\r\n        }\r\n        if (data.error) {\r\n          console.error('Github Authentication Error', data.error, data.error_description, data.error_uri);\r\n          return;\r\n        }\r\n        connection.setCookie('github_access_token', data['access_token'], connection.config['expires']);\r\n        window.location.href = window.location.href.replace(/[\\\\?&]code=[^&#]*/, '');\r\n      },\r\n    );\r\n  }\r\n\r\n  connection.isConnected()\r\n    ? document.dispatchEvent(new CustomEvent('IsConnectedToGithubEvent', { detail: connection }))\r\n    : document.dispatchEvent(new CustomEvent('IsDisconnectedFromGithubEvent', { detail: connection }));\r\n\r\n  return connection;\r\n}\r\n\r\n// Check if user is connected to github\r\nconnection.isConnected = function () {\r\n  return connection.getCookie('github_access_token') !== '';\r\n};\r\n\r\n// Connect to github\r\nconnection.connect = function () {\r\n  window.location.href =\r\n    'https://github.com/login/oauth/authorize?client_id=' + connection.config['client_id'] + '&scope=' + connection.config['scope'];\r\n};\r\n\r\n// Disconnect from github\r\nconnection.disconnect = function () {\r\n  connection.deleteCookies(['github_access_token']);\r\n  window.location.reload();\r\n};\r\n\r\n// Connection toggle\r\nconnection.toggle = function () {\r\n  connection.isConnected() ? connection.disconnect() : connection.connect();\r\n};\r\n\r\n// Get credentials: username, access_token\r\nconnection.withCredentials = function (callback) {\r\n  var access_token = connection.getCookie('github_access_token');\r\n  if (access_token) {\r\n    get_request('https://api.github.com/user?access_token=' + access_token, function (error, data) {\r\n      return error === null ? callback(null, data['login'], access_token, data) : callback(error);\r\n    });\r\n  } else return callback('User is not authorized...');\r\n};\r\n\r\n// Get 'param' from url\r\nconnection.parseUrl = function (param) {\r\n  param = param.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n  var regex = new RegExp('[\\\\?&]' + param + '=([^&#/]*)');\r\n  var results = regex.exec(window.location.href);\r\n  return results === null ? null : results[1];\r\n};\r\n\r\n// Set cookie with name, value and expires - the number of days\r\nconnection.setCookie = function (name, value, expires) {\r\n  var d = new Date();\r\n  d.setTime(d.getTime() + expires * 24 * 60 * 60 * 1000);\r\n  var expires = 'expires=' + d.toGMTString();\r\n  document.cookie = name + '=' + value + '; ' + expires;\r\n};\r\n\r\n// Get cookie by name\r\nconnection.getCookie = function (name) {\r\n  var name = name + '=';\r\n  var ca = document.cookie.split(';');\r\n  for (var i = 0; i < ca.length; i++) {\r\n    var c = ca[i].trim();\r\n    if (c.indexOf(name) == 0) return c.substring(name.length, c.length);\r\n  }\r\n  return '';\r\n};\r\n\r\n// Delete all cookies from array - names\r\nconnection.deleteCookies = function (names) {\r\n  for (var i = 0; i < names.length; ++i) {\r\n    document.cookie = names[i] + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n  }\r\n};\r\n\r\n// Handling GET request, return JSON\r\nfunction get_request(url, callback) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open('GET', url, true);\r\n  xhr.onreadystatechange = function () {\r\n    if (this.readyState == 4) {\r\n      if ((this.status >= 200 && this.status < 300) || this.status === 304) {\r\n        callback(null, JSON.parse(this.responseText));\r\n      } else {\r\n        callback({ request: this, error: this.status });\r\n      }\r\n    }\r\n  };\r\n  xhr.send();\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport function utf8_to_b64(str: string) {\r\n  return window.btoa(unescape(encodeURIComponent(str)));\r\n}\r\n\r\nexport function b64_to_utf8(str: string) {\r\n  return decodeURIComponent(escape(window.atob(str)));\r\n}\r\n\r\nexport function validateNonEmptyString(key: string, value: string): void | never {\r\n  if (!value || typeof value !== 'string') {\r\n    throw new Error(`Expected ${key} to be a non-empty string, but got: \"${value}\"`);\r\n  }\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// const ledger = new Ledger({\r\n//   auth: PERSONAL_ACCESS_TOKEN,\r\n//   ledgerRepoUrl: LEDGER_REPO_URL,\r\n// });\r\n// await ledger.load();\r\n\r\nimport { Octokit } from '@octokit/core';\r\nimport semver from 'semver';\r\nimport {\r\n  LedgerRepoOptions,\r\n  LedgerData,\r\n  Setup,\r\n  RawVersion,\r\n  RawTestResult,\r\n  Component,\r\n  Version,\r\n  ComponentsAvailableVersionsMap,\r\n} from './types';\r\nimport { b64_to_utf8, utf8_to_b64, validateNonEmptyString } from './util';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nexport default async function getLedger(octokitAuthToken: string, ledgerRepo: LedgerRepoOptions) {\r\n  const ledger = new Ledger({\r\n    octokitAuthToken,\r\n    ledgerRepo,\r\n    isCli: false,\r\n  });\r\n  await ledger.init();\r\n  return ledger;\r\n}\r\n\r\ntype LedgerConstructorOptions = { octokitAuthToken: string; ledgerRepo: LedgerRepoOptions; isCli?: boolean };\r\nexport class Ledger {\r\n  private octokit: Octokit | undefined;\r\n  private auth: string;\r\n  private ledgerRepo: LedgerRepoOptions;\r\n\r\n  private ledgerFilePath: string = 'ledger.json';\r\n  private defaultData: LedgerData = {\r\n    components: [],\r\n    versions: [],\r\n    setups: [],\r\n    tests: [],\r\n  };\r\n\r\n  public data: LedgerData | undefined; // FIXME private\r\n  private sha: string | undefined;\r\n\r\n  private isCli: boolean;\r\n\r\n  // PREPARE/ GH INTERFACING\r\n  constructor(options: LedgerConstructorOptions) {\r\n    const { octokitAuthToken, ledgerRepo, isCli = true } = options;\r\n    this.auth = octokitAuthToken;\r\n    this.ledgerRepo = ledgerRepo;\r\n    this.isCli = isCli;\r\n  }\r\n\r\n  public init() {\r\n    if (this.octokit) return;\r\n    this.octokit = new Octokit({ auth: this.auth });\r\n  }\r\n\r\n  public getOctokitInstance() {\r\n    if (!this.octokit) throw new Error('You are not authorized with GitHub account');\r\n    return this.octokit;\r\n  }\r\n\r\n  public async fetch() {\r\n    if (!this.octokit) return;\r\n    const response = await this.octokit.request(\r\n      `GET /repos/${this.ledgerRepo.owner}/${this.ledgerRepo.name}/contents/${this.ledgerFilePath}`,\r\n    );\r\n    if (response.status !== 200) {\r\n      throw new Error(`Failed to load ledger data: ${response.data.error}`);\r\n    }\r\n    this.data = this.deserialize(response.data.content);\r\n    this.sha = response.data.sha;\r\n    return this;\r\n  }\r\n\r\n  private async addTo<T>(property: string, value: T) {\r\n    const newData = {\r\n      ...this.data,\r\n      [property]: [...(this.data as any)[property], value],\r\n    };\r\n\r\n    // TODO implement\r\n    // const preCheck = await (this.octokit as any).request(\r\n    //   `GET /repos/${this.ledgerRepo.owner}/${this.ledgerRepo.name}/contents/${this.ledgerFilePath}`,\r\n    // );\r\n    // this.sha === preCheck.data.content.sha\r\n\r\n    const response = await (this.octokit as any).request(\r\n      `PUT /repos/${this.ledgerRepo.owner}/${this.ledgerRepo.name}/contents/${this.ledgerFilePath}`,\r\n      {\r\n        message: `new ${property}`,\r\n        content: this.serialize(newData as any),\r\n        sha: this.sha,\r\n      },\r\n    );\r\n    if (response.status !== 200) {\r\n      throw new Error(`Failed to update ledger data: ${response.data.error}`);\r\n    }\r\n\r\n    const postCheck = await (this.octokit as any).request(\r\n      `GET /repos/${this.ledgerRepo.owner}/${this.ledgerRepo.name}/contents/${this.ledgerFilePath}`,\r\n    );\r\n\r\n    (this.data as any) = newData;\r\n    this.sha = response.data.content.sha;\r\n\r\n    if (this.sha !== postCheck.data.sha) {\r\n      const msg = 'CRITICAL ERROR: post-update SHA check failed. Open development console, copy error log and contact the development team';\r\n      console.error(msg, '\\n', 'response data', '\\n', response, '\\n', 'check data', '\\n', postCheck, '\\n', '---CRITICAL ERROR LOG END---');\r\n      throw new Error(msg);\r\n    }\r\n  }\r\n\r\n  private deserialize(rawData: any): LedgerData {\r\n    return JSON.parse(b64_to_utf8(rawData));\r\n  }\r\n\r\n  private serialize(data: LedgerData): string {\r\n    return utf8_to_b64(JSON.stringify(data));\r\n  }\r\n\r\n  // CREATE\r\n  public async addComponent(rawData: Component) {\r\n    if (!this.checkData(this.data)) {\r\n      throw new Error(`No local data; Check internet connection and make sure that Github and ${this.ledgerRepo.url} are reachable`);\r\n    }\r\n\r\n    // TODO replace with something like joi but lightweight\r\n    validateNonEmptyString('id', rawData.id);\r\n    validateNonEmptyString('name', rawData.name);\r\n\r\n    if (this.isComponentExists(rawData.id, rawData.name)) {\r\n      throw new Error('Component with the same id or name already exists');\r\n    }\r\n\r\n    await this.addTo<Component>('components', {\r\n      id: rawData.id.trim(),\r\n      name: rawData.name.trim(),\r\n    });\r\n  }\r\n\r\n  public async addSetup(rawSetupData: Setup) {\r\n    if (!this.checkData(this.data)) {\r\n      throw new Error(`No local data; Check internet connection and make sure that Github and ${this.ledgerRepo.url} are reachable`);\r\n    }\r\n\r\n    validateNonEmptyString('id', rawSetupData.id);\r\n    validateNonEmptyString('name', rawSetupData.name);\r\n\r\n    if (!Array.isArray(rawSetupData.componentIds) || rawSetupData.componentIds.length === 0) {\r\n      throw new Error('Setup must include at least one component');\r\n    }\r\n\r\n    const alreadyExists = this.data.setups.findIndex(x => x.id === rawSetupData.id || x.name === rawSetupData.name) > -1;\r\n    if (alreadyExists) {\r\n      throw new Error('Setup with the same id or name already exists');\r\n    }\r\n\r\n    // check for components list uniqueness\r\n    // TODO use real hashing\r\n    const getComponentsHash = (components: string[]) => {\r\n      let str = '';\r\n      for (let i = 0; i < components.length; i++) {\r\n        str += components[i];\r\n      }\r\n      return str;\r\n    };\r\n    const newHash = getComponentsHash(rawSetupData.componentIds);\r\n    const isUnique =\r\n      this.data.setups\r\n        .map(x => x.componentIds)\r\n        .map(getComponentsHash)\r\n        .findIndex(x => x === newHash) === -1;\r\n    if (!isUnique) {\r\n      throw new Error('Setup with the same list of components already exist');\r\n    }\r\n\r\n    // validate components existence\r\n    const nonExistentComponents = rawSetupData.componentIds.filter(x => !this.isComponentExists(x));\r\n    if (nonExistentComponents.length > 0) {\r\n      throw new Error(`Components with the following ids do not exist:\\n${nonExistentComponents.join('\\n')}`);\r\n    }\r\n\r\n    await this.addTo<Setup>('setups', {\r\n      id: rawSetupData.id.trim(),\r\n      name: rawSetupData.name.trim(),\r\n      componentIds: rawSetupData.componentIds.sort(),\r\n    });\r\n  }\r\n\r\n  public async addVersion(rawData: RawVersion) {\r\n    if (!this.checkData(this.data)) {\r\n      throw new Error(`No local data; Check internet connection and make sure that Github and ${this.ledgerRepo.url} are reachable`);\r\n    }\r\n\r\n    const { componentId, tag } = rawData;\r\n\r\n    validateNonEmptyString('componentId', componentId);\r\n    validateNonEmptyString('tag', tag);\r\n\r\n    if (!this.isComponentExists(componentId)) {\r\n      throw new Error(`Component with id \"${componentId}\" does not exist`);\r\n      // if (this.softMode)\r\n      // const msg = `Component with id ${componentId} does not exist, but it will be added automatically. Later, you can edit it's parameters manually`;\r\n      // this.warning(msg);\r\n      // await this.addComponent({ id: componentId, name: componentId });\r\n    }\r\n\r\n    const existingVersion = this.findVersion(componentId, tag);\r\n    if (existingVersion) {\r\n      const msg = `\r\n      Version ${componentId}:${tag} already exists.\r\n      It was created at ${dayjs(existingVersion.date).format('DD/MM/YY hh:mm:ss')}.\r\n      Duplicate version will be added and take priority over the previous one.\r\n      But you will still able to see it in the version table.\r\n    `;\r\n      this.warning(msg);\r\n    }\r\n\r\n    await this.addTo('versions', {\r\n      date: Date.now(),\r\n      componentId: componentId.trim(),\r\n      tag: tag.trim(),\r\n    });\r\n  }\r\n\r\n  public async addTest(data: RawTestResult) {\r\n    if (!this.checkData(this.data)) {\r\n      throw new Error(`No local data; Check internet connection and make sure that Github and ${this.ledgerRepo.url} are reachable`);\r\n    }\r\n\r\n    validateNonEmptyString('id', data.setupId);\r\n    validateNonEmptyString('status', data.status);\r\n\r\n    if (Object.keys(data.componentVersionMap).length === 0) {\r\n      throw new Error('Please specify a version for each of the components');\r\n    }\r\n\r\n    // existing setup\r\n    const setup = this.getSetupById(data.setupId);\r\n    if (!setup) {\r\n      const msg = `Setup with id ${data.setupId} doesn't exists.\r\n      Test result will be saved, but will only be visible in raw tests data table.\r\n      Make sure to add ${data.setupId} to setups list.`;\r\n      this.warning(msg);\r\n      // FIXME I hate it\r\n      this.validateSetupComponentsList(data);\r\n    } else {\r\n      this.validateSetupComponentsList(data, setup.componentIds);\r\n    }\r\n\r\n    await this.addTo('tests', {\r\n      date: Date.now(),\r\n      componentVersionMap: data.componentVersionMap,\r\n      setupId: data.setupId,\r\n      status: data.status.trim(),\r\n      description: data.description?.trim(),\r\n    });\r\n  }\r\n\r\n  private validateSetupComponentsList(data: RawTestResult, setupComponentIds?: string[]) {\r\n    const inputIds = Object.keys(data.componentVersionMap);\r\n\r\n    if (Array.isArray(setupComponentIds) && setupComponentIds.length > 0) {\r\n      // TODO throw message with exact component ids\r\n      const isListExhaustive = setupComponentIds.every(x => inputIds.includes(x));\r\n      if (!isListExhaustive) {\r\n        throw new Error('Please specify a version for each of the components');\r\n      }\r\n    }\r\n\r\n    let errorMsg = '';\r\n    for (const componentId in data.componentVersionMap) {\r\n      const versionTag = data.componentVersionMap[componentId];\r\n      const version = this.findVersion(componentId, versionTag);\r\n      if (!version) {\r\n        errorMsg = `${componentId}:${versionTag} does not exists!\\n`;\r\n      }\r\n    }\r\n    if (errorMsg) {\r\n      errorMsg += `Test result will be saved, but make sure to add these versions`;\r\n      this.warning(errorMsg);\r\n    }\r\n  }\r\n\r\n  // GET\r\n  public getLatestVersion(componentId: string) {\r\n    if (!this.data) throw new Error('no data'); // FIXME\r\n    return this.data.versions.filter(x => x.componentId === componentId).sort((a, b) => semver.compare(b.tag, a.tag))[0];\r\n  }\r\n\r\n  public getLatestVersions(setupId?: string): Version[] {\r\n    if (!this.data) throw new Error('no data'); // FIXME\r\n\r\n    if (setupId) {\r\n      const setup = this.data.setups.find(x => setupId === x.id);\r\n      if (!setup) {\r\n        throw new Error(\r\n          `CRITICAL ERROR: setup with ${setupId} not found. Normally, this should not happen. Please contact the development team`,\r\n        );\r\n      }\r\n      return setup.componentIds.map(this.getLatestVersion);\r\n    }\r\n    return this.data.components.map(x => x.id).map(this.getLatestVersion);\r\n  }\r\n\r\n  public getSetupComponents(setupId: string) {\r\n    if (!this.data) throw new Error('no data'); // FIXME\r\n    const setup = this.getSetupById(setupId);\r\n    if (!setup) {\r\n      throw new Error(`setup with id \"${setupId}\" is not found`);\r\n    }\r\n    const components = this.data.components.filter(x => setup.componentIds.includes(x.id));\r\n    if (components.length === 0) {\r\n      this.warning(`getSetupComponents(): setup ${setupId} appears to have no components`);\r\n    }\r\n    return components;\r\n  }\r\n\r\n  private getSetupById(setupId: string) {\r\n    // FIXME this.data existence\r\n    return (this.data as any as LedgerData).setups.find((x: Setup) => x.id === setupId);\r\n  }\r\n\r\n  public getSetupTests(setupId: string) {\r\n    // FIXME this.data existence\r\n    return (this.data as any as LedgerData).tests.filter(x => x.setupId === setupId);\r\n  }\r\n\r\n  private findVersion(componentId: string, versionTag: string) {\r\n    // FIXME this.data existence\r\n    const componentVersions = (this.data as any as LedgerData).versions.filter(x => x.componentId === componentId);\r\n    const existingVersion = componentVersions.find(x => x.tag === versionTag);\r\n    return existingVersion;\r\n  }\r\n\r\n  public getComponentsVersions(componentIds: string[]): ComponentsAvailableVersionsMap {\r\n    if (!this.data) throw new Error('no data'); // FIXME\r\n    const result = componentIds.reduce<ComponentsAvailableVersionsMap>((a, x) => {\r\n      a[x] = [];\r\n      return a;\r\n    }, {});\r\n\r\n    this.data.versions\r\n      .filter(x => result[x.componentId])\r\n      .sort((a, b) => semver.compare(b.tag, a.tag)) // this \"should\" work as intended\r\n      .forEach(x => {\r\n        result[x.componentId].push(x.tag);\r\n      });\r\n\r\n    return result;\r\n  }\r\n\r\n  // MISC\r\n  private checkData(data: any): data is LedgerData {\r\n    return (\r\n      data &&\r\n      Array.isArray((data as LedgerData).components) &&\r\n      Array.isArray((data as LedgerData).versions) &&\r\n      Array.isArray((data as LedgerData).setups) &&\r\n      Array.isArray((data as LedgerData).tests)\r\n    );\r\n  }\r\n\r\n  // TODO deal with polymorphic function signature phobia\r\n  private isComponentExists(id: string, name?: string) {\r\n    if (!this.data) throw new Error('no data'); // FIXME\r\n\r\n    if (name) {\r\n      return this.data.components.findIndex(x => x.id === id && x.name === name) > -1;\r\n    }\r\n\r\n    return this.data.components.findIndex(x => x.id === id) > -1;\r\n  }\r\n\r\n  private warning(msg: string) {\r\n    this.isCli ? console.warn(msg) : alert(msg);\r\n    return;\r\n  }\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport gitConnect from './third-party/git-connect/git-connect';\r\nimport getLedger, { Ledger } from '../lib/ledger';\r\n\r\nconst { REACT_APP_GITHUB_OAUTH_APP_CLIENT_ID, REACT_APP_GITHUB_OAUTH_APP_PROXY, REACT_APP_GITHUB_OAUTH_APP_SCOPES } = process.env;\r\nconst connection = gitConnect({\r\n  client_id: REACT_APP_GITHUB_OAUTH_APP_CLIENT_ID,\r\n  proxy: REACT_APP_GITHUB_OAUTH_APP_PROXY,\r\n  scope: REACT_APP_GITHUB_OAUTH_APP_SCOPES,\r\n\r\n  //expires: 7,  //optional, default: 7; the number of days after cookies expire\r\n\r\n  //this options are used and required only for `git-edit` module\r\n  // owner: 'github_username',  //application owner's github username\r\n  // reponame: 'github_reponame', //application's repository name\r\n});\r\n\r\nlet ledger: Ledger;\r\nasync function getLedgerInstance() {\r\n  if (!connection.isConnected()) return false;\r\n  if (ledger) return ledger;\r\n  const auth = connection.getCookie('github_access_token');\r\n  ledger = await getLedger(auth, {\r\n    url: String(process.env.REACT_APP_LEDGER_REPO_URL),\r\n    owner: String(process.env.REACT_APP_LEDGER_REPO_OWNER),\r\n    name: String(process.env.REACT_APP_LEDGER_REPO_NAME),\r\n  });\r\n  return ledger;\r\n}\r\n\r\nfunction connect() {\r\n  if (!connection.isConnected()) connection.connect();\r\n}\r\n\r\nfunction disconnect() {\r\n  if (connection.isConnected()) connection.disconnect();\r\n}\r\n\r\nexport interface Connector {\r\n  getLedgerInstance: () => Promise<false | Ledger>;\r\n  connect: () => void;\r\n  disconnect: () => void;\r\n  isConnected: () => boolean;\r\n}\r\n\r\nconst connector: Connector = {\r\n  getLedgerInstance,\r\n  connect,\r\n  disconnect,\r\n  isConnected: () => connection.isConnected(),\r\n};\r\n\r\nexport default connector;\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport default function Spinner(props: any) {\r\n  if (props.children) return <div>{props.children}</div>;\r\n  return <div>...</div>;\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { useEffect, useState } from 'react';\r\nimport connection from '../connection';\r\n\r\nexport default function () {\r\n  const [data, setData] = useState<any>();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const ledger = await connection.getLedgerInstance();\r\n        if (!ledger) {\r\n          return;\r\n        }\r\n        const response = await ledger.getOctokitInstance().request(`GET /user`);\r\n        if (response.status !== 200) {\r\n          const msg = 'ERROR: Failed to obtain user data. Open development console, copy error log and contact the development team';\r\n          console.error(msg, '\\n', 'response', response, '---ERROR LOG END---');\r\n          throw new Error(msg);\r\n        }\r\n        setData(response.data);\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return { data, isLoading };\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport useUser from '../github/hooks/use-user';\r\nimport Spinner from './spinner';\r\n\r\nexport default function () {\r\n  const { isLoading, data } = useUser();\r\n  if (isLoading) {\r\n    return <Spinner> waiting to receive user data... </Spinner>;\r\n  }\r\n\r\n  if (!data) {\r\n    return <div>you are not authenticated</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', marginRight: '15px' }}>\r\n      <span>Hi there</span>\r\n      <a className=\"github-user-link\" href={data?.html_url}>\r\n        <img style={{ margin: '0 7px' }} alt=\"user-avatar\" className=\"avatar\" src={data.avatar_url} />\r\n        <span>{data?.login}</span>\r\n        <span>!</span>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\ntype PlaceholderProps = {\r\n  authenticate: (...arg: any[]) => any;\r\n};\r\n\r\nexport default function (props: PlaceholderProps) {\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          alignContent: 'center',\r\n          height: 'calc(100vh - 39px)',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <h2 style={{ flex: '1', textAlign: 'center' }}>\r\n          You cannot see anything yet <br />\r\n          because <br /> you must{' '}\r\n          <span\r\n            style={{ color: 'white', textDecoration: 'underline', cursor: 'pointer' }}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              props.authenticate();\r\n            }}\r\n          >\r\n            Authenticate\r\n          </span>\r\n        </h2>\r\n      </div>\r\n      <img\r\n        alt=\"placeholder\"\r\n        style={{ width: '100%', height: 'calc(100vh - 39px)' }}\r\n        src=\"https://img5.goodfon.ru/original/1920x1080/c/cb/sea-bird-grey-ocean.jpg\" // FIXME this is probably copyrighted and is very depressing :D\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Ledger } from '../../lib/ledger';\r\nimport { LedgerData } from '../../lib/types';\r\n\r\nexport default (props: { ledger: Ledger; data: LedgerData }) => (\r\n  <Formik\r\n    initialValues={{ id: '', name: '' }}\r\n    onSubmit={async (values, { setSubmitting }) => {\r\n      try {\r\n        await props.ledger.addComponent(values);\r\n        window.location.reload(); // pro react development\r\n      } catch (e) {\r\n        alert('Action failed: ' + (e as any)?.message || JSON.stringify(e));\r\n      } finally {\r\n        setSubmitting(false);\r\n      }\r\n    }}\r\n  >\r\n    {({ isSubmitting }) => (\r\n      <Form>\r\n        <h3>New component</h3>\r\n        <label htmlFor=\"add-component-field-id\">Unique id</label>\r\n        <Field id=\"add-component-field-id\" type=\"text\" name=\"id\" placeholder=\"unique-dash-lower-case-id\" />\r\n        <ErrorMessage name=\"id\" component=\"div\" />\r\n\r\n        <label htmlFor=\"add-component-field-name\">Human-readable name</label>\r\n        <Field id=\"add-component-field-name\" type=\"text\" name=\"name\" placeholder=\"My Awesome Component\" />\r\n        <ErrorMessage name=\"name\" component=\"div\" />\r\n\r\n        <button type=\"submit\" disabled={isSubmitting}>\r\n          Submit\r\n        </button>\r\n        {isSubmitting && <div>submitting...</div>}\r\n      </Form>\r\n    )}\r\n  </Formik>\r\n);\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport function stripPrefix(prefix: string) {\r\n  const prefixRegex = new RegExp(`^${prefix}`);\r\n  return (x: string) => x.replace(prefixRegex, '');\r\n}\r\n\r\nexport function startsWith(search: string) {\r\n  return (str: string) => str.indexOf(search) === 0;\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Ledger } from '../../lib/ledger';\r\nimport { LedgerData } from '../../lib/types';\r\nimport Spinner from '../spinner';\r\nimport { startsWith, stripPrefix } from './util';\r\n\r\nexport default (props: { ledger: Ledger; data: LedgerData }) => {\r\n  if (!Array.isArray(props.data.components) || props.data.components.length === 0) {\r\n    return <Spinner>No available components. Create components first</Spinner>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>New setup</h3>\r\n      <Formik\r\n        initialValues={{ id: '', name: '' }}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          try {\r\n            const { id, name, ...other } = values;\r\n            const componentIds = Object.keys(other).filter(startsWith('component-')).map(stripPrefix('component-'));\r\n            await props.ledger.addSetup({ id, name, componentIds });\r\n            window.location.reload(); // pro react development\r\n          } catch (e) {\r\n            alert('Action failed: ' + (e as any)?.message || JSON.stringify(e));\r\n          } finally {\r\n            setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <label htmlFor=\"add-component-field-id\">Unique id</label>\r\n            <Field id=\"add-component-field-id\" type=\"text\" name=\"id\" placeholder=\"unique-dash-lower-case-id\" />\r\n            <ErrorMessage name=\"id\" component=\"div\" />\r\n\r\n            <label htmlFor=\"add-setup-field-name\">Human-readable name</label>\r\n            <Field id=\"add-setup-field-name\" type=\"text\" name=\"name\" placeholder=\"My Awesome Setup\" />\r\n            <ErrorMessage name=\"name\" component=\"div\" />\r\n\r\n            <label htmlFor=\"id\">Select components</label>\r\n\r\n            {props.data.components.map(component => (\r\n              <div key={component.id}>\r\n                <Field id={`add-setup-field-${component.id}`} type=\"checkbox\" name={`component-${component.id}`} />\r\n                <label style={{ paddingLeft: '7px' }} htmlFor={`add-setup-field-${component.id}`}>\r\n                  {component.name}\r\n                </label>\r\n              </div>\r\n            ))}\r\n\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n            {isSubmitting && <div>submitting...</div>}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// credits to https://gist.github.com/hubgit/e394e9be07d95cd5e774989178139ae8\r\nimport { FieldProps } from 'formik';\r\nimport React from 'react';\r\nimport Select, * as ReactSelect from 'react-select';\r\n\r\n// TODO fix dirty hacks with cb\r\nexport default (onChangeCb: (...args: any[]) => any = () => null): React.SFC<ReactSelect.Props & FieldProps> =>\r\n  ({ options, field, form }) =>\r\n    (\r\n      <Select\r\n        options={options}\r\n        name={field.name}\r\n        className={'select-field'}\r\n        value={options ? options.find((x: any) => x.value === field.value) : ''}\r\n        onChange={(option: any) => {\r\n          form.setFieldValue(field.name, option.value);\r\n          onChangeCb(option.value, form);\r\n        }}\r\n        onBlur={field.onBlur}\r\n      />\r\n    );\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport connection from '../../github/connection';\r\nimport SelectField from './generic/select-field';\r\nimport Spinner from '../spinner';\r\nimport { useState } from 'react';\r\nimport { LedgerData } from '../../lib/types';\r\nimport { Ledger } from '../../lib/ledger';\r\n\r\nconst VERSION_PLACEHOLDER = 'SemVer, e.g. x.y.z';\r\n\r\nexport default (props: { ledger: Ledger; data: LedgerData }) => {\r\n  if (!Array.isArray(props.data.components) || props.data.components.length === 0) {\r\n    return <Spinner>No available components. Create components first</Spinner>;\r\n  }\r\n  const components = props.data.components.map(x => ({ value: x.id, label: x.name }));\r\n  const [versionPlaceholder, setVersionPlaceholder] = useState(VERSION_PLACEHOLDER);\r\n  return (\r\n    <>\r\n      <h3>New version</h3>\r\n      <Formik\r\n        initialValues={{ componentId: '', tag: '', date: '' }}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          try {\r\n            await props.ledger.addVersion({\r\n              componentId: values.componentId,\r\n              tag: values.tag,\r\n            });\r\n\r\n            window.location.reload(); // pro react development\r\n          } catch (e) {\r\n            alert('Action failed: ' + (e as any)?.message || JSON.stringify(e));\r\n          } finally {\r\n            setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <label htmlFor=\"add-version-field-component-id\">Component</label>\r\n            <Field\r\n              id=\"add-version-field-component-id\"\r\n              name=\"componentId\"\r\n              component={SelectField(async (componentId: string, form) => {\r\n                const ledger = await connection.getLedgerInstance();\r\n                if (!ledger) return;\r\n                const latestVersion = await ledger.getLatestVersion(componentId);\r\n                if (!latestVersion) {\r\n                  setVersionPlaceholder(VERSION_PLACEHOLDER);\r\n                  return;\r\n                }\r\n                setVersionPlaceholder(`latest is ${latestVersion.tag}`);\r\n              })}\r\n              options={components}\r\n            />\r\n            <ErrorMessage name=\"componentId\" component=\"div\" />\r\n\r\n            <label htmlFor=\"add-version-field-tag\">Version Tag</label>\r\n            <Field id=\"add-component-field-tag\" type=\"text\" name=\"tag\" placeholder={versionPlaceholder} />\r\n            <ErrorMessage name=\"tag\" component=\"div\" />\r\n\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n            {isSubmitting && <div>submitting...</div>}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport styled from 'styled-components';\r\n\r\nconst Styled = styled.div`\r\n  color: rgba(255, 91, 205, 0.5);\r\n`;\r\n\r\nexport default function Question(props: any) {\r\n  return <Styled>{props.children}</Styled>;\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport default function Alert(props: any) {\r\n  if (props.children) return <div>{props.children}</div>;\r\n  return <div>...</div>;\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport SelectField from './generic/select-field';\r\nimport Spinner from '../spinner';\r\nimport { Component, LedgerData } from '../../lib/types';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { Ledger } from '../../lib/ledger';\r\nimport { startsWith, stripPrefix } from './util';\r\nimport Question from '../question';\r\nimport Alert from '../alert';\r\n\r\nexport default (props: { ledger: Ledger; data: LedgerData }) => {\r\n  if (!Array.isArray(props.data.setups) || props.data.setups.length === 0) {\r\n    return <Spinner>No available setups. Create setups first</Spinner>;\r\n  }\r\n  const setups = props.data.setups.map(x => ({ value: x.id, label: x.name }));\r\n  const [components, setComponents] = useState<Component[]>([]);\r\n  return (\r\n    <>\r\n      <h3>New test result</h3>\r\n      <Formik\r\n        initialValues={{ setupId: '', status: '', description: '', componentVersionMap: {} }}\r\n        onSubmit={async ({ setupId, status, description, ...other }, { setSubmitting }) => {\r\n          try {\r\n            const componentVersionMap = Object.entries(other)\r\n              .filter(([key]) => startsWith('component-')(key))\r\n              .reduce((a: Record<string, string>, [key, version]) => {\r\n                a[stripPrefix('component-')(key)] = version;\r\n                return a;\r\n              }, {});\r\n\r\n            await props.ledger.addTest({\r\n              setupId,\r\n              status,\r\n              componentVersionMap,\r\n              description,\r\n            });\r\n\r\n            window.location.reload(); // pro react development\r\n          } catch (e) {\r\n            alert('Action failed: ' + (e as any)?.message || JSON.stringify(e));\r\n            // not so sure about that finally\r\n          } finally {\r\n            setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <label htmlFor=\"add-test-field-setup-id\">Setup</label>\r\n            <Field\r\n              id=\"add-test-field-setup-id\"\r\n              name={'setupId'}\r\n              component={SelectField(async (setupId: string, form) => {\r\n                const components = await props.ledger.getSetupComponents(setupId);\r\n                setComponents(components);\r\n                form.resetForm({\r\n                  values: { setupId, status: form.values.status, description: form.values.description, componentVersionMap: {} },\r\n                });\r\n              })}\r\n              options={setups}\r\n            />\r\n            <ErrorMessage name=\"setupId\" component=\"div\" />\r\n\r\n            <label htmlFor=\"add-test-field-status\">Status</label>\r\n            <Field id=\"add-component-field-status\" type=\"text\" name=\"status\" placeholder=\"anything (passed, failed?)\" />\r\n            <ErrorMessage name=\"status\" component=\"div\" />\r\n\r\n            <label htmlFor=\"add-test-field-description\">Description (optional)</label>\r\n            <Field id=\"add-component-field-description\" type=\"text\" name=\"description\" placeholder=\"something informative\" />\r\n            <ErrorMessage name=\"description\" component=\"div\" />\r\n\r\n            <label htmlFor=\"add-test-field-status\">Component Versions</label>\r\n            <Versions components={components} ledger={props.ledger} />\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n            {isSubmitting && <div>submitting...</div>}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Question>\r\n        <span>IDEA #1: Allow to configure hook on test result submission</span>\r\n        <br />\r\n        <span>| {'e.g. if (test.status === \"failed\") req.(\"POST our.mail.proxy/?recipients={setup.maintainers}\", test)'}</span>\r\n      </Question>\r\n    </>\r\n  );\r\n};\r\n\r\n// FIXME don't toss ledger around, obtain it directly instead\r\nfunction useVersions(componentIds: string[], ledger: Ledger): { isLoading: boolean; vers: Record<string, string[]>; error: string } {\r\n  const [vers, setVers] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const availableVersions = await ledger.getComponentsVersions(componentIds);\r\n        setVers(availableVersions);\r\n      } catch (e: any) {\r\n        setError(`Failed to load versions. Error: ${e?.message || 'unknown'}`);\r\n      }\r\n      setIsLoading(false);\r\n    })();\r\n  }, [componentIds]); // FIXME missing ledger dep\r\n\r\n  return { isLoading, vers, error };\r\n}\r\n\r\nfunction Versions(props: { ledger: Ledger; components: Component[] }) {\r\n  const components = props.components;\r\n  const componentIds = useMemo(() => components.map(x => x.id), [components]);\r\n  const { isLoading: isLoadingVersionsData, vers, error } = useVersions(componentIds, props.ledger);\r\n\r\n  if (!Array.isArray(components) || components.length === 0) return <Spinner>...select setup first</Spinner>;\r\n  if (isLoadingVersionsData) return <Spinner>loading versions</Spinner>;\r\n  if (error) return <Alert>{error}</Alert>;\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {components.map(component => (\r\n          <tr key={component.id}>\r\n            <td>\r\n              <label style={{ cursor: 'pointer' }} htmlFor={`add-test-field-component-${component.id}`}>\r\n                {component.name}\r\n              </label>\r\n            </td>\r\n            <td>\r\n              {!Array.isArray(vers[component.id]) ? (\r\n                'no versions'\r\n              ) : (\r\n                <Field\r\n                  id={`add-test-field-component-${component.id}`}\r\n                  name={`component-${component.id}`}\r\n                  component={SelectField()}\r\n                  options={vers[component.id].map(versionTag => ({ value: versionTag, label: versionTag }))}\r\n                />\r\n              )}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport const C = {\r\n  white: 'rgb(204, 204, 204)',\r\n  shade1: `rgb(60, 60, 60)`,\r\n  shade2: `rgb(45, 45, 45)`,\r\n  shade3: `rgb(30, 30, 30)`,\r\n\r\n  green: `rgb(106, 138, 85)`,\r\n\r\n  blue1: `rgb(59 75 86)`,\r\n  blue2: `rgb(61 100 126)`,\r\n  blue3: `rgb(14 99 156)`,\r\n\r\n  yellow: 'rgb(226,180,128)',\r\n};\r\n\r\nexport const L = {\r\n  paddingSm: `7px`,\r\n  paddingMd: `15px`,\r\n};\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { useState, useEffect } from 'react';\r\nimport { C } from './styles';\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nexport default function ElapsedTimer({ start = Date.now(), updateFrequency = 1000 * 10 }: ElapsedProps) {\r\n  const elapsed = useElapsed({ start, updateFrequency });\r\n  return <span style={{ color: C.yellow }}>{elapsed}</span>;\r\n}\r\n\r\nexport function useElapsed({ start, updateFrequency }: ElapsedProps) {\r\n  const s = dayjs(start);\r\n  const [elapsedStr, setElapsedStr] = useState(s.fromNow());\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setElapsedStr(s.fromNow());\r\n    }, updateFrequency);\r\n  }, [updateFrequency]);\r\n  // FIXME passing start is kinda hack-ish, but I'm unsure about passing \"s\" as it's the instance of dayjs\r\n\r\n  return elapsedStr;\r\n}\r\n\r\nexport type ElapsedProps = { start?: number; updateFrequency?: number };\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport styled from 'styled-components';\r\nimport { C, L } from '../styles';\r\n\r\nexport const T = {\r\n  Td: styled.td`\r\n    background-color: ${C.shade2};\r\n    border: 1px solid ${C.shade3};\r\n    color: ${C.white};\r\n    padding: ${L.paddingSm} ${L.paddingMd};\r\n    vertical-align: top;\r\n    :empty {\r\n      background-color: rgba(45, 45, 45, 0.8);\r\n    }\r\n  `,\r\n  Th: styled.th`\r\n    background-color: ${C.shade2};\r\n    border: 1px solid ${C.shade3};\r\n    color: ${C.white};\r\n    padding: ${L.paddingSm} ${L.paddingMd};\r\n  `,\r\n  Tr: styled.tr`\r\n    :hover {\r\n      outline: 4px solid ${C.blue1};\r\n    }\r\n  `,\r\n};\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { C } from '../styles';\r\n\r\nconst S = {\r\n  Wrapper: styled.div`\r\n    > button {\r\n      background: none;\r\n      :hover {\r\n        background-color: ${C.shade2};\r\n      }\r\n    }\r\n    input,\r\n    select {\r\n      color: ${C.white};\r\n      background: none;\r\n      outline: none;\r\n      border: none;\r\n      border-bottom: 1px solid ${C.white};\r\n    }\r\n    input {\r\n      width: 50px;\r\n    }\r\n    select {\r\n      padding-bottom: 2px;\r\n    }\r\n    option {\r\n      color: black;\r\n    }\r\n  `,\r\n};\r\n\r\nexport function Pagination(props: any) {\r\n  const {\r\n    gotoPage,\r\n    canPreviousPage,\r\n    previousPage,\r\n    nextPage,\r\n    canNextPage,\r\n    pageCount,\r\n    pageOptions,\r\n    setPageSize,\r\n    state: { pageSize, pageIndex },\r\n  } = props.tableInstance;\r\n\r\n  if (pageOptions.length === 0 || pageOptions.length === 1) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <S.Wrapper style={{ alignItems: 'center' }}>\r\n      <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n        {'<<'}\r\n      </button>{' '}\r\n      <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n        {'<'}\r\n      </button>{' '}\r\n      <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n        {'>'}\r\n      </button>{' '}\r\n      <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n        {'>>'}\r\n      </button>{' '}\r\n      <span>\r\n        Page{' '}\r\n        <strong>\r\n          {pageIndex + 1} of {pageOptions.length}\r\n        </strong>{' '}\r\n      </span>\r\n      <span>\r\n        | Go to page:{' '}\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={pageIndex + 1}\r\n          onChange={e => {\r\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n            gotoPage(page);\r\n          }}\r\n        />\r\n      </span>{' '}\r\n      <select\r\n        value={pageSize}\r\n        onChange={e => {\r\n          setPageSize(Number(e.target.value));\r\n        }}\r\n      >\r\n        {[5, 10, 20, 30, 40, 50].map(pageSize => (\r\n          <option key={pageSize} value={pageSize}>\r\n            Show {pageSize}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </S.Wrapper>\r\n  );\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport function sortBy(prop: string) {\r\n  return (b: any, a: any) => (b[prop] > a[prop] ? -1 : b[prop] < a[prop] ? 1 : 0);\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport React from 'react';\r\nimport { useTable, usePagination } from 'react-table';\r\nimport styled from 'styled-components';\r\nimport ElapsedTimer from '../elapsed-timer';\r\nimport { Component, Version } from '../../lib/types';\r\nimport Question from '../question';\r\nimport { T } from './styles';\r\nimport { ColumnDetails } from './types';\r\nimport { Pagination } from './Pagination';\r\nimport { sortBy } from './util';\r\nimport { Ledger } from '../../lib/ledger';\r\n\r\ntype VersionTableProps = {\r\n  components: Component[];\r\n  versions: Version[];\r\n  ledger: Ledger; // FIXME I don't like it\r\n};\r\n\r\nconst S = {\r\n  Table: styled.table`\r\n    white-space: nowrap;\r\n  `,\r\n  ScrollXWrapper: styled.div`\r\n    overflow-x: auto;\r\n  `,\r\n};\r\n\r\nexport default function VersionTable(props: VersionTableProps) {\r\n  const { components, versions } = props;\r\n\r\n  const data = React.useMemo<ColumnDetails[]>(\r\n    () =>\r\n      versions.sort(sortBy('date')).map(x => ({\r\n        release: x.date,\r\n        [x.componentId]: x.tag,\r\n      })),\r\n    [], // FIXME\r\n  );\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Release date',\r\n        Latest: 'latests:',\r\n        accessor: 'release',\r\n        Cell: (props: any) => {\r\n          return <ElapsedTimer start={props.row.values.release} />;\r\n        },\r\n      },\r\n      ...components.map(c => ({ Header: c.name, Latest: props.ledger.getLatestVersion(c.id)?.tag || '-', accessor: c.id })),\r\n    ],\r\n    [], // FIXME\r\n  );\r\n\r\n  const tableInstance = useTable({ columns, data, initialState: { pageSize: 5 } } as any, usePagination);\r\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow } = tableInstance;\r\n  const { page }: any = tableInstance;\r\n\r\n  // FIXME useMemo gets called in vain\r\n  if (components.length === 0) {\r\n    return <div>no components</div>;\r\n  }\r\n  if (versions.length === 0) {\r\n    return <div>no versions</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <S.ScrollXWrapper>\r\n        <S.Table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <>\r\n                <T.Tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map(column => {\r\n                    return (\r\n                      <T.Td {...column.getHeaderProps()}>\r\n                        <div>{(column as any).Latest && column.render('Latest')}</div>\r\n                      </T.Td>\r\n                    );\r\n                  })}\r\n                </T.Tr>\r\n                <T.Tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map(column => {\r\n                    return (\r\n                      <T.Th {...column.getHeaderProps()}>\r\n                        <div>{column.render('Header')}</div>\r\n                      </T.Th>\r\n                    );\r\n                  })}\r\n                </T.Tr>\r\n              </>\r\n            ))}\r\n          </thead>\r\n          {/* Apply the table body props */}\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row: any) => {\r\n              prepareRow(row);\r\n              return (\r\n                <T.Tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell: any) => {\r\n                    return <T.Td {...cell.getCellProps()}>{cell.render('Cell')}</T.Td>;\r\n                  })}\r\n                </T.Tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </S.Table>\r\n      </S.ScrollXWrapper>\r\n      <Pagination tableInstance={tableInstance} />\r\n      <Question>\r\n        <span>1. Filter tags e.g. x.y.z \"stable only\" | x.y.z-*\"prerelease\" | x.y.z-my-feature \"scratch\", etc</span>\r\n        <br />\r\n        <span>2. Allow sorting by either date or semver</span>\r\n        <br />\r\n        <span>3. Display latests row in setups</span>\r\n        <br />\r\n        <span>4. Allow temporarily hiding all but one column</span>\r\n        <br />\r\n        <span>5. Allow to reorder/hide columns (localStorage)</span>\r\n        <br />\r\n        <span>6. Save pagination settings (localStorage)</span>\r\n      </Question>\r\n    </div>\r\n  );\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport styled from 'styled-components';\r\nimport { C, L } from './styles';\r\n\r\nconst S = {\r\n  table: styled.tbody`\r\n    border: 1px solid ${C.shade2};\r\n    background-color: ${C.shade3};\r\n  `,\r\n  tr: styled.tr`\r\n    :hover {\r\n      outline: 4px solid ${C.blue1};\r\n    }\r\n  `,\r\n  td: styled.td`\r\n    padding: ${L.paddingSm};\r\n  `,\r\n  versionTag: styled.span`\r\n    color: ${C.yellow};\r\n  `,\r\n};\r\n\r\ntype ComponentsVersionsMapProps = {\r\n  [componentId: string]: string;\r\n};\r\n\r\nexport default function ComponentsVersionsMap(props: ComponentsVersionsMapProps) {\r\n  return (\r\n    <S.table>\r\n      {Object.entries(props.data).map(([componentId, versionTag]) => {\r\n        return (\r\n          <S.tr key={`${componentId}:${versionTag}`}>\r\n            <S.td>{componentId}</S.td>\r\n            <S.td>\r\n              <S.versionTag>{versionTag}</S.versionTag>\r\n            </S.td>\r\n          </S.tr>\r\n        );\r\n      })}\r\n    </S.table>\r\n  );\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-disable react/jsx-pascal-case */\r\n\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { C } from './styles';\r\n\r\ntype ExpanderStateProps = { isExpanded: boolean };\r\n\r\nconst Styled = {\r\n  wrapper: styled.div``,\r\n  button: styled.div`\r\n    color: ${C.white};\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    :hover {\r\n      color: ${C.blue3};\r\n    }\r\n  `,\r\n  inner: styled.div`\r\n    transform: ${({ isExpanded }: ExpanderStateProps) => (isExpanded ? 'translateY(0%)' : 'translateY(-100%)')};\r\n  `,\r\n  children: styled.div``,\r\n};\r\n\r\nexport default function NoRender({ initialRender = false, label, children }: NoRenderProps) {\r\n  const [isRendered, setIsRendered] = useState(initialRender);\r\n\r\n  return (\r\n    <Styled.wrapper title=\"click to expand\">\r\n      <Styled.button onClick={() => setIsRendered(!isRendered)}>{label}</Styled.button>\r\n      {isRendered && <Styled.children>{children}</Styled.children>}\r\n    </Styled.wrapper>\r\n  );\r\n}\r\n\r\nexport type NoRenderProps = { initialRender?: boolean; label: string; children: any };\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport React from 'react';\r\nimport { usePagination, useTable } from 'react-table';\r\nimport styled from 'styled-components';\r\nimport ElapsedTimer from '../elapsed-timer';\r\nimport { Setup, TestResult } from '../../lib/types';\r\nimport ComponentsVersionsMap from '../components-versions-map';\r\nimport NoRender from '../no-render';\r\nimport { sortBy } from './util';\r\nimport { ColumnDetails } from './types';\r\nimport { T } from './styles';\r\nimport { Pagination } from './Pagination';\r\n\r\ntype VersionTableProps = {\r\n  setup: Setup;\r\n  tests: TestResult[];\r\n};\r\n\r\nconst S = {\r\n  Table: styled.table`\r\n    white-space: nowrap;\r\n    min-width: 100%;\r\n  `,\r\n};\r\n\r\nexport default function SetupTestsTable(props: VersionTableProps) {\r\n  const { tests } = props;\r\n  const data = React.useMemo<ColumnDetails[]>(\r\n    () =>\r\n      tests.sort(sortBy('date')).map(x => ({\r\n        date: x.date,\r\n        status: x.status,\r\n        description: x.description,\r\n        componentVersionMap: x.componentVersionMap,\r\n      })),\r\n    [tests, tests.length], // FIXME\r\n  );\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Date',\r\n        accessor: 'date',\r\n        Cell: (props: any) => {\r\n          return <ElapsedTimer start={props.row.values.date} />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Description',\r\n        accessor: 'description',\r\n        Cell: (props: any) => {\r\n          const text = props.row.values.description;\r\n          if (!text) return null;\r\n          // TODO move it elsewhere\r\n          const MAX_LEN = 10;\r\n          if (text.length < MAX_LEN) {\r\n            return text;\r\n          }\r\n          return <NoRender label={`${text.slice(0, 10)}...`}>{text}</NoRender>;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Status',\r\n        accessor: 'status',\r\n      },\r\n      {\r\n        Header: 'Versions',\r\n        accessor: 'componentVersionMap',\r\n        Cell: (props: any) => {\r\n          return (\r\n            <NoRender label=\"versions\">\r\n              <ComponentsVersionsMap data={props.row.values.componentVersionMap} />\r\n            </NoRender>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const tableInstance = useTable({ columns, data, initialState: { pageSize: 5 } } as any, usePagination);\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\r\n  const { page }: any = tableInstance;\r\n\r\n  return (\r\n    <div>\r\n      <S.Table {...getTableProps()}>\r\n        <thead>\r\n          {\r\n            // Loop over the header rows\r\n            headerGroups.map(headerGroup => (\r\n              // Apply the header row props\r\n              <T.Tr {...headerGroup.getHeaderGroupProps()}>\r\n                {\r\n                  // Loop over the headers in each row\r\n                  headerGroup.headers.map(column => (\r\n                    // Apply the header cell props\r\n                    <T.Th {...column.getHeaderProps()}>\r\n                      {\r\n                        // Render the header\r\n                        column.render('Header')\r\n                      }\r\n                    </T.Th>\r\n                  ))\r\n                }\r\n              </T.Tr>\r\n            ))\r\n          }\r\n        </thead>\r\n        {/* Apply the table body props */}\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.length <= 0 && (\r\n            <T.Tr>\r\n              <T.Td colSpan={columns.length}>No data on setup tests</T.Td>\r\n            </T.Tr>\r\n          )}\r\n          {rows.length > 0 &&\r\n            page.map((row: any) => {\r\n              // Prepare the row for display\r\n              prepareRow(row);\r\n              return (\r\n                // Apply the row props\r\n                <T.Tr {...row.getRowProps()}>\r\n                  {\r\n                    // Loop over the rows cells\r\n                    row.cells.map((cell: any) => {\r\n                      // Apply the cell props\r\n                      return (\r\n                        <T.Td {...cell.getCellProps()}>\r\n                          {\r\n                            // Render the cell contents\r\n                            cell.render('Cell')\r\n                          }\r\n                        </T.Td>\r\n                      );\r\n                    })\r\n                  }\r\n                </T.Tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </S.Table>\r\n      <Pagination tableInstance={tableInstance} />\r\n    </div>\r\n  );\r\n}\r\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { LedgerData } from '../lib/types';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  font-size: 12px;\r\n  background-color: black;\r\n`;\r\n\r\nexport function DebugData({ data }: { data: LedgerData }) {\r\n  return (\r\n    <Wrapper className=\"row\">\r\n      <div className=\"col-3\">\r\n        <div>Components</div>\r\n        <Stats label=\"Components\" data={data.components} />\r\n      </div>\r\n      <div className=\"col-3\">\r\n        <div>Setups</div>\r\n        <Stats label=\"Setups\" data={data.setups} />\r\n      </div>\r\n      <div className=\"col-3\">\r\n        <div>Versions</div>\r\n        <Stats label=\"Versions\" data={data.versions} keyProp=\"date\" />\r\n      </div>\r\n      <div className=\"col-3\">\r\n        <div>Tests</div>\r\n        <Stats label=\"Tests\" data={data.tests} keyProp=\"date\" />\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\nfunction Stats(props: any) {\r\n  const { data, keyProp = 'id' } = props;\r\n  if (!Array.isArray(data)) return <>{'...'}</>;\r\n  return <div>{data.map((x: any) => RenderStat(x[keyProp], x))}</div>;\r\n}\r\nfunction RenderStat(key: string, data: any) {\r\n  return (\r\n    <div className=\"mb-2\" key={key}>\r\n      {JSON.stringify(data)},\r\n    </div>\r\n  );\r\n}\r\n","/*\n * Copyright 2020 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport styled from 'styled-components';\n\nimport useLedgerData from '../github/hooks/use-ledger-data';\nimport connection from '../github/connection';\n\nimport Spinner from './spinner';\nimport User from './user';\nimport Nothing from './placeholder';\n\nimport FormAddComponent from './forms/add-component';\nimport FormAddSetup from './forms/add-setup';\nimport FormAddVersion from './forms/add-version';\nimport FormAddTest from './forms/add-test';\nimport VersionTable from './tables/version';\nimport ElapsedTimer from './elapsed-timer';\nimport SetupTestsTable from './tables/setup-tests';\nimport { DebugData } from './DebugData';\nimport NoRender from './no-render';\nimport Question from './question';\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"header\">\n        <div style={{ marginRight: '15px' }}>\n          {!connection.isConnected() ? ( // TODO useConnection\n            <button onClick={() => connection.connect()}>Authenticate using GitHub</button>\n          ) : (\n            <button onClick={() => connection.disconnect()}>GitHub Logout</button>\n          )}\n        </div>\n        <User />\n      </div>\n      <div className=\"main-ui\">{connection.isConnected() ? <RenderStuff /> : <Nothing authenticate={() => connection.connect()} />}</div>\n    </div>\n  );\n}\n\nfunction RenderStuff() {\n  const { isLoading, data, ledger } = useLedgerData();\n  if (isLoading || !ledger) return <Spinner>Loading ledger data...</Spinner>;\n\n  if (!data) return <Spinner>ledger.json is not initialized. Make sure to follow setup instructions or contact dev team</Spinner>;\n\n  return (\n    <div className=\"px-2\">\n      <div>\n        Refreshed <ElapsedTimer />\n      </div>\n      <TopFixedWrapper>\n        <NoRender label=\"Debug Data\">\n          <DebugData data={data} />\n        </NoRender>\n      </TopFixedWrapper>\n\n      {/* VERSIONS */}\n      <h3 className=\"mt-3\">VERSIONS</h3>\n      <VersionTable versions={data.versions} components={data.components} ledger={ledger} />\n\n      {/*SETUPS  */}\n      <h3 className=\"mt-3\">SETUPS</h3>\n      <div className=\"row\">\n        {data.setups.map(setup => {\n          const setupTests = ledger.getSetupTests(setup.id);\n          return (\n            <div className=\"col-12 col-md-6 col-xl-4 mb-3\" key={setup.id}>\n              <h5>{setup.name}</h5>\n              <SetupTestsTable setup={setup} tests={setupTests} />\n            </div>\n          );\n        })}\n      </div>\n      <Question>IDEA #1: Append logs / links to logs</Question>\n      <Question>IDEA #2: Allow to use @ to link Jira users/Jira issues?</Question>\n      <Question>IDEA #3: Allow attachments?</Question>\n      <Question>IDEA #4: Click-on-version/component to navigate to commit/rep/artifact?</Question>\n\n      {/*FORMS  */}\n      <div className=\"row mt-5\">\n        <div className=\"col-12 col-md-6 col-xl-3\">\n          <FormAddComponent ledger={ledger} data={data} />\n        </div>\n        <div className=\"col-12 col-md-6 col-xl-3\">\n          <FormAddSetup ledger={ledger} data={data} />\n        </div>\n        <div className=\"col-12 col-md-6 col-xl-3\">\n          <FormAddVersion ledger={ledger} data={data} />\n        </div>\n        <div className=\"col-12 col-md-6 col-xl-3\">\n          <FormAddTest ledger={ledger} data={data} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst TopFixedWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  overflow-y: auto;\n  background-color: black;\n  max-height: 30vh;\n`;\nexport default App;\n","/*\r\n * Copyright 2020 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { useEffect, useState } from 'react';\r\nimport { Ledger } from '../../lib/ledger';\r\nimport { LedgerData } from '../../lib/types';\r\nimport connection from '../connection';\r\n\r\nexport default function () {\r\n  const [data, setData] = useState<LedgerData>();\r\n  const [ledger, setLedgerInstance] = useState<Ledger>();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const ledger = await connection.getLedgerInstance();\r\n        if (!ledger) return;\r\n        setData((await ledger.fetch())?.data);\r\n        setLedgerInstance(ledger);\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return { data, ledger, isLoading };\r\n}\r\n","/*\n * Copyright 2020 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}